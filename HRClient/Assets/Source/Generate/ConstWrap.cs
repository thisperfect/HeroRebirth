//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class ConstWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Const), typeof(System.Object));
		L.RegFunction("New", _CreateConst);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("DebugMode", get_DebugMode, set_DebugMode);
		L.RegVar("TimerInterval", get_TimerInterval, set_TimerInterval);
		L.RegVar("GameFrameRate", get_GameFrameRate, set_GameFrameRate);
		L.RegVar("luaScripts", get_luaScripts, set_luaScripts);
		L.RegVar("LuaStop", get_LuaStop, set_LuaStop);
		L.RegVar("SelectSocketAddress", get_SelectSocketAddress, set_SelectSocketAddress);
		L.RegVar("SocketPort", get_SocketPort, set_SocketPort);
		L.RegVar("SocketAddress", get_SocketAddress, set_SocketAddress);
		L.RegVar("RecvKey", get_RecvKey, set_RecvKey);
		L.RegVar("SendKey", get_SendKey, set_SendKey);
		L.RegVar("NetStatus", get_NetStatus, set_NetStatus);
		L.RegVar("fcmInit", get_fcmInit, set_fcmInit);
		L.RegVar("platid", get_platid, set_platid);
		L.RegVar("userid", get_userid, set_userid);
		L.RegVar("serverid", get_serverid, set_serverid);
		L.RegVar("actorid", get_actorid, set_actorid);
		L.RegVar("trackover", get_trackover, set_trackover);
		L.RegVar("quality", get_quality, set_quality);
		L.RegVar("sdk_isinit", get_sdk_isinit, set_sdk_isinit);
		L.RegVar("sdk_isEnterUserCenter", get_sdk_isEnterUserCenter, set_sdk_isEnterUserCenter);
		L.RegVar("sdk_isEnterBBS", get_sdk_isEnterBBS, set_sdk_isEnterBBS);
		L.RegVar("sdk_isExitGame", get_sdk_isExitGame, set_sdk_isExitGame);
		L.RegVar("sdk_isLogout", get_sdk_isLogout, set_sdk_isLogout);
		L.RegVar("sdk_isSwitchAccount", get_sdk_isSwitchAccount, set_sdk_isSwitchAccount);
		L.RegVar("sdk_isShareSdk", get_sdk_isShareSdk, set_sdk_isShareSdk);
		L.RegVar("sdk_payprice", get_sdk_payprice, set_sdk_payprice);
		L.RegVar("sdk_paytype", get_sdk_paytype, set_sdk_paytype);
		L.RegVar("sdk_productid", get_sdk_productid, set_sdk_productid);
		L.RegVar("sdk_sysType", get_sdk_sysType, set_sdk_sysType);
		L.RegVar("sdk_fbuid", get_sdk_fbuid, set_sdk_fbuid);
		L.RegVar("sdk_gpuid", get_sdk_gpuid, set_sdk_gpuid);
		L.RegVar("sdk_puid", get_sdk_puid, set_sdk_puid);
		L.RegVar("sdk_uid", get_sdk_uid, set_sdk_uid);
		L.RegVar("sdk_sign", get_sdk_sign, set_sdk_sign);
		L.RegVar("sdk_timestamp", get_sdk_timestamp, set_sdk_timestamp);
		L.RegVar("sdk_channelId", get_sdk_channelId, set_sdk_channelId);
		L.RegVar("sdk_channelLable", get_sdk_channelLable, set_sdk_channelLable);
		L.RegVar("sdk_isnewuser", get_sdk_isnewuser, set_sdk_isnewuser);
		L.RegVar("ResourceMode", get_ResourceMode, set_ResourceMode);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateConst(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Const obj = new Const();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Const.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_DebugMode(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, Const.DebugMode);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_TimerInterval(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Const.TimerInterval);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_GameFrameRate(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Const.GameFrameRate);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_luaScripts(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Const.luaScripts);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LuaStop(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, Const.LuaStop);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SelectSocketAddress(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Const.SelectSocketAddress);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SocketPort(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Const.SocketPort);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SocketAddress(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Const.SocketAddress);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_RecvKey(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushnumber(L, Const.RecvKey);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SendKey(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushnumber(L, Const.SendKey);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_NetStatus(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Const.NetStatus);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_fcmInit(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, Const.fcmInit);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_platid(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Const.platid);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_userid(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Const.userid);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_serverid(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Const.serverid);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_actorid(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Const.actorid);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_trackover(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, Const.trackover);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_quality(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Const.quality);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_sdk_isinit(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, Const.sdk_isinit);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_sdk_isEnterUserCenter(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, Const.sdk_isEnterUserCenter);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_sdk_isEnterBBS(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, Const.sdk_isEnterBBS);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_sdk_isExitGame(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, Const.sdk_isExitGame);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_sdk_isLogout(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, Const.sdk_isLogout);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_sdk_isSwitchAccount(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, Const.sdk_isSwitchAccount);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_sdk_isShareSdk(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, Const.sdk_isShareSdk);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_sdk_payprice(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Const.sdk_payprice);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_sdk_paytype(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Const.sdk_paytype);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_sdk_productid(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Const.sdk_productid);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_sdk_sysType(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Const.sdk_sysType);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_sdk_fbuid(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Const.sdk_fbuid);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_sdk_gpuid(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Const.sdk_gpuid);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_sdk_puid(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Const.sdk_puid);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_sdk_uid(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Const.sdk_uid);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_sdk_sign(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Const.sdk_sign);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_sdk_timestamp(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Const.sdk_timestamp);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_sdk_channelId(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Const.sdk_channelId);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_sdk_channelLable(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Const.sdk_channelLable);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_sdk_isnewuser(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Const.sdk_isnewuser);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ResourceMode(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Const.ResourceMode);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_DebugMode(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			Const.DebugMode = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_TimerInterval(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Const.TimerInterval = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_GameFrameRate(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Const.GameFrameRate = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_luaScripts(IntPtr L)
	{
		try
		{
			UnityEngine.TextAsset[] arg0 = ToLua.CheckObjectArray<UnityEngine.TextAsset>(L, 2);
			Const.luaScripts = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_LuaStop(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			Const.LuaStop = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_SelectSocketAddress(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			Const.SelectSocketAddress = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_SocketPort(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Const.SocketPort = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_SocketAddress(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			Const.SocketAddress = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_RecvKey(IntPtr L)
	{
		try
		{
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			Const.RecvKey = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_SendKey(IntPtr L)
	{
		try
		{
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			Const.SendKey = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_NetStatus(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Const.NetStatus = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_fcmInit(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			Const.fcmInit = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_platid(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Const.platid = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_userid(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			Const.userid = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_serverid(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			Const.serverid = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_actorid(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			Const.actorid = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_trackover(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			Const.trackover = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_quality(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Const.quality = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_sdk_isinit(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			Const.sdk_isinit = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_sdk_isEnterUserCenter(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			Const.sdk_isEnterUserCenter = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_sdk_isEnterBBS(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			Const.sdk_isEnterBBS = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_sdk_isExitGame(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			Const.sdk_isExitGame = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_sdk_isLogout(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			Const.sdk_isLogout = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_sdk_isSwitchAccount(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			Const.sdk_isSwitchAccount = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_sdk_isShareSdk(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			Const.sdk_isShareSdk = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_sdk_payprice(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Const.sdk_payprice = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_sdk_paytype(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			Const.sdk_paytype = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_sdk_productid(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Const.sdk_productid = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_sdk_sysType(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			Const.sdk_sysType = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_sdk_fbuid(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			Const.sdk_fbuid = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_sdk_gpuid(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			Const.sdk_gpuid = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_sdk_puid(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			Const.sdk_puid = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_sdk_uid(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			Const.sdk_uid = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_sdk_sign(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			Const.sdk_sign = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_sdk_timestamp(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			Const.sdk_timestamp = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_sdk_channelId(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			Const.sdk_channelId = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_sdk_channelLable(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			Const.sdk_channelLable = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_sdk_isnewuser(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			Const.sdk_isnewuser = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ResourceMode(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			Const.ResourceMode = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

