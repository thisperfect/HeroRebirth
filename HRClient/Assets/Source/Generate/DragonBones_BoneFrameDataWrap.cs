//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class DragonBones_BoneFrameDataWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(DragonBones.BoneFrameData), typeof(DragonBones.TweenFrameData<DragonBones.BoneFrameData>));
		L.RegFunction("New", _CreateDragonBones_BoneFrameData);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("tweenScale", get_tweenScale, set_tweenScale);
		L.RegVar("tweenRotate", get_tweenRotate, set_tweenRotate);
		L.RegVar("transform", get_transform, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateDragonBones_BoneFrameData(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				DragonBones.BoneFrameData obj = new DragonBones.BoneFrameData();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: DragonBones.BoneFrameData.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_tweenScale(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DragonBones.BoneFrameData obj = (DragonBones.BoneFrameData)o;
			bool ret = obj.tweenScale;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index tweenScale on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_tweenRotate(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DragonBones.BoneFrameData obj = (DragonBones.BoneFrameData)o;
			float ret = obj.tweenRotate;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index tweenRotate on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_transform(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DragonBones.BoneFrameData obj = (DragonBones.BoneFrameData)o;
			DragonBones.Transform ret = obj.transform;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index transform on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_tweenScale(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DragonBones.BoneFrameData obj = (DragonBones.BoneFrameData)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.tweenScale = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index tweenScale on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_tweenRotate(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DragonBones.BoneFrameData obj = (DragonBones.BoneFrameData)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.tweenRotate = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index tweenRotate on a nil value" : e.Message);
		}
	}
}

