//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class DragonBones_BaseFactoryWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(DragonBones.BaseFactory), typeof(System.Object));
		L.RegFunction("ParseDragonBonesData", ParseDragonBonesData);
		L.RegFunction("ParseTextureAtlasData", ParseTextureAtlasData);
		L.RegFunction("GetDragonBonesData", GetDragonBonesData);
		L.RegFunction("AddDragonBonesData", AddDragonBonesData);
		L.RegFunction("RemoveDragonBonesData", RemoveDragonBonesData);
		L.RegFunction("GetTextureAtlasData", GetTextureAtlasData);
		L.RegFunction("AddTextureAtlasData", AddTextureAtlasData);
		L.RegFunction("RemoveTextureAtlasData", RemoveTextureAtlasData);
		L.RegFunction("Clear", Clear);
		L.RegFunction("BuildArmature", BuildArmature);
		L.RegFunction("CopyAnimationsToArmature", CopyAnimationsToArmature);
		L.RegFunction("ReplaceSlotDisplay", ReplaceSlotDisplay);
		L.RegFunction("ReplaceSlotDisplayList", ReplaceSlotDisplayList);
		L.RegFunction("GetAllDragonBonesData", GetAllDragonBonesData);
		L.RegFunction("GetAllTextureAtlasData", GetAllTextureAtlasData);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("autoSearch", get_autoSearch, set_autoSearch);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ParseDragonBonesData(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			DragonBones.BaseFactory obj = (DragonBones.BaseFactory)ToLua.CheckObject(L, 1, typeof(DragonBones.BaseFactory));
			System.Collections.Generic.Dictionary<string,object> arg0 = (System.Collections.Generic.Dictionary<string,object>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.Dictionary<string,object>));
			string arg1 = ToLua.CheckString(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			DragonBones.DragonBonesData o = obj.ParseDragonBonesData(arg0, arg1, arg2);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ParseTextureAtlasData(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			DragonBones.BaseFactory obj = (DragonBones.BaseFactory)ToLua.CheckObject(L, 1, typeof(DragonBones.BaseFactory));
			System.Collections.Generic.Dictionary<string,object> arg0 = (System.Collections.Generic.Dictionary<string,object>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.Dictionary<string,object>));
			object arg1 = ToLua.ToVarObject(L, 3);
			string arg2 = ToLua.CheckString(L, 4);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
			DragonBones.TextureAtlasData o = obj.ParseTextureAtlasData(arg0, arg1, arg2, arg3);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetDragonBonesData(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			DragonBones.BaseFactory obj = (DragonBones.BaseFactory)ToLua.CheckObject(L, 1, typeof(DragonBones.BaseFactory));
			string arg0 = ToLua.CheckString(L, 2);
			DragonBones.DragonBonesData o = obj.GetDragonBonesData(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddDragonBonesData(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			DragonBones.BaseFactory obj = (DragonBones.BaseFactory)ToLua.CheckObject(L, 1, typeof(DragonBones.BaseFactory));
			DragonBones.DragonBonesData arg0 = (DragonBones.DragonBonesData)ToLua.CheckObject(L, 2, typeof(DragonBones.DragonBonesData));
			string arg1 = ToLua.CheckString(L, 3);
			obj.AddDragonBonesData(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveDragonBonesData(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			DragonBones.BaseFactory obj = (DragonBones.BaseFactory)ToLua.CheckObject(L, 1, typeof(DragonBones.BaseFactory));
			string arg0 = ToLua.CheckString(L, 2);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			obj.RemoveDragonBonesData(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetTextureAtlasData(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			DragonBones.BaseFactory obj = (DragonBones.BaseFactory)ToLua.CheckObject(L, 1, typeof(DragonBones.BaseFactory));
			string arg0 = ToLua.CheckString(L, 2);
			System.Collections.Generic.List<DragonBones.TextureAtlasData> o = obj.GetTextureAtlasData(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddTextureAtlasData(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			DragonBones.BaseFactory obj = (DragonBones.BaseFactory)ToLua.CheckObject(L, 1, typeof(DragonBones.BaseFactory));
			DragonBones.TextureAtlasData arg0 = (DragonBones.TextureAtlasData)ToLua.CheckObject(L, 2, typeof(DragonBones.TextureAtlasData));
			string arg1 = ToLua.CheckString(L, 3);
			obj.AddTextureAtlasData(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveTextureAtlasData(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			DragonBones.BaseFactory obj = (DragonBones.BaseFactory)ToLua.CheckObject(L, 1, typeof(DragonBones.BaseFactory));
			string arg0 = ToLua.CheckString(L, 2);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			obj.RemoveTextureAtlasData(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Clear(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			DragonBones.BaseFactory obj = (DragonBones.BaseFactory)ToLua.CheckObject(L, 1, typeof(DragonBones.BaseFactory));
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.Clear(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int BuildArmature(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			DragonBones.BaseFactory obj = (DragonBones.BaseFactory)ToLua.CheckObject(L, 1, typeof(DragonBones.BaseFactory));
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			string arg2 = ToLua.CheckString(L, 4);
			string arg3 = ToLua.CheckString(L, 5);
			DragonBones.Armature o = obj.BuildArmature(arg0, arg1, arg2, arg3);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CopyAnimationsToArmature(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 6);
			DragonBones.BaseFactory obj = (DragonBones.BaseFactory)ToLua.CheckObject(L, 1, typeof(DragonBones.BaseFactory));
			DragonBones.Armature arg0 = (DragonBones.Armature)ToLua.CheckObject(L, 2, typeof(DragonBones.Armature));
			string arg1 = ToLua.CheckString(L, 3);
			string arg2 = ToLua.CheckString(L, 4);
			string arg3 = ToLua.CheckString(L, 5);
			bool arg4 = LuaDLL.luaL_checkboolean(L, 6);
			bool o = obj.CopyAnimationsToArmature(arg0, arg1, arg2, arg3, arg4);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ReplaceSlotDisplay(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 7);
			DragonBones.BaseFactory obj = (DragonBones.BaseFactory)ToLua.CheckObject(L, 1, typeof(DragonBones.BaseFactory));
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			string arg2 = ToLua.CheckString(L, 4);
			string arg3 = ToLua.CheckString(L, 5);
			DragonBones.Slot arg4 = (DragonBones.Slot)ToLua.CheckObject(L, 6, typeof(DragonBones.Slot));
			int arg5 = (int)LuaDLL.luaL_checknumber(L, 7);
			obj.ReplaceSlotDisplay(arg0, arg1, arg2, arg3, arg4, arg5);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ReplaceSlotDisplayList(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			DragonBones.BaseFactory obj = (DragonBones.BaseFactory)ToLua.CheckObject(L, 1, typeof(DragonBones.BaseFactory));
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			string arg2 = ToLua.CheckString(L, 4);
			DragonBones.Slot arg3 = (DragonBones.Slot)ToLua.CheckObject(L, 5, typeof(DragonBones.Slot));
			obj.ReplaceSlotDisplayList(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetAllDragonBonesData(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			DragonBones.BaseFactory obj = (DragonBones.BaseFactory)ToLua.CheckObject(L, 1, typeof(DragonBones.BaseFactory));
			System.Collections.Generic.Dictionary<string,DragonBones.DragonBonesData> o = obj.GetAllDragonBonesData();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetAllTextureAtlasData(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			DragonBones.BaseFactory obj = (DragonBones.BaseFactory)ToLua.CheckObject(L, 1, typeof(DragonBones.BaseFactory));
			System.Collections.Generic.Dictionary<string,System.Collections.Generic.List<DragonBones.TextureAtlasData>> o = obj.GetAllTextureAtlasData();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_autoSearch(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DragonBones.BaseFactory obj = (DragonBones.BaseFactory)o;
			bool ret = obj.autoSearch;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index autoSearch on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_autoSearch(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DragonBones.BaseFactory obj = (DragonBones.BaseFactory)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.autoSearch = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index autoSearch on a nil value" : e.Message);
		}
	}
}

