//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class ShareDataWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(ShareData), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("AddValue", AddValue);
		L.RegFunction("GetValue", GetValue);
		L.RegFunction("RemoveValue", RemoveValue);
		L.RegFunction("SetInt", SetInt);
		L.RegFunction("ClearShareVars", ClearShareVars);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("intValue", get_intValue, set_intValue);
		L.RegVar("floatValue", get_floatValue, set_floatValue);
		L.RegVar("boolValue", get_boolValue, set_boolValue);
		L.RegVar("stringValue", get_stringValue, set_stringValue);
		L.RegVar("_vars", get__vars, set__vars);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddValue(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			ShareData obj = (ShareData)ToLua.CheckObject(L, 1, typeof(ShareData));
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			obj.AddValue(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetValue(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ShareData obj = (ShareData)ToLua.CheckObject(L, 1, typeof(ShareData));
			string arg0 = ToLua.CheckString(L, 2);
			object o = obj.GetValue(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveValue(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ShareData obj = (ShareData)ToLua.CheckObject(L, 1, typeof(ShareData));
			string arg0 = ToLua.CheckString(L, 2);
			obj.RemoveValue(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetInt(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			ShareData obj = (ShareData)ToLua.CheckObject(L, 1, typeof(ShareData));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			obj.SetInt(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ClearShareVars(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ShareData obj = (ShareData)ToLua.CheckObject(L, 1, typeof(ShareData));
			obj.ClearShareVars();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_intValue(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ShareData obj = (ShareData)o;
			int[] ret = obj.intValue;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index intValue on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_floatValue(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ShareData obj = (ShareData)o;
			float[] ret = obj.floatValue;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index floatValue on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_boolValue(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ShareData obj = (ShareData)o;
			bool[] ret = obj.boolValue;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index boolValue on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_stringValue(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ShareData obj = (ShareData)o;
			string[] ret = obj.stringValue;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index stringValue on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get__vars(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ShareData obj = (ShareData)o;
			System.Collections.Hashtable ret = obj._vars;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index _vars on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_intValue(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ShareData obj = (ShareData)o;
			int[] arg0 = ToLua.CheckNumberArray<int>(L, 2);
			obj.intValue = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index intValue on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_floatValue(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ShareData obj = (ShareData)o;
			float[] arg0 = ToLua.CheckNumberArray<float>(L, 2);
			obj.floatValue = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index floatValue on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_boolValue(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ShareData obj = (ShareData)o;
			bool[] arg0 = ToLua.CheckBoolArray(L, 2);
			obj.boolValue = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index boolValue on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_stringValue(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ShareData obj = (ShareData)o;
			string[] arg0 = ToLua.CheckStringArray(L, 2);
			obj.stringValue = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index stringValue on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set__vars(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ShareData obj = (ShareData)o;
			System.Collections.Hashtable arg0 = (System.Collections.Hashtable)ToLua.CheckObject(L, 2, typeof(System.Collections.Hashtable));
			obj._vars = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index _vars on a nil value" : e.Message);
		}
	}
}

