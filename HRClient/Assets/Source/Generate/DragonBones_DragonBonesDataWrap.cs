//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class DragonBones_DragonBonesDataWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(DragonBones.DragonBonesData), typeof(DragonBones.BaseObject));
		L.RegFunction("GetArmature", GetArmature);
		L.RegFunction("AddArmature", AddArmature);
		L.RegFunction("New", _CreateDragonBones_DragonBonesData);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("autoSearch", get_autoSearch, set_autoSearch);
		L.RegVar("frameRate", get_frameRate, set_frameRate);
		L.RegVar("name", get_name, set_name);
		L.RegVar("armatures", get_armatures, null);
		L.RegVar("cachedFrames", get_cachedFrames, null);
		L.RegVar("userData", get_userData, set_userData);
		L.RegVar("armatureNames", get_armatureNames, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateDragonBones_DragonBonesData(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				DragonBones.DragonBonesData obj = new DragonBones.DragonBonesData();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: DragonBones.DragonBonesData.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetArmature(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			DragonBones.DragonBonesData obj = (DragonBones.DragonBonesData)ToLua.CheckObject(L, 1, typeof(DragonBones.DragonBonesData));
			string arg0 = ToLua.CheckString(L, 2);
			DragonBones.ArmatureData o = obj.GetArmature(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddArmature(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			DragonBones.DragonBonesData obj = (DragonBones.DragonBonesData)ToLua.CheckObject(L, 1, typeof(DragonBones.DragonBonesData));
			DragonBones.ArmatureData arg0 = (DragonBones.ArmatureData)ToLua.CheckObject(L, 2, typeof(DragonBones.ArmatureData));
			obj.AddArmature(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_autoSearch(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DragonBones.DragonBonesData obj = (DragonBones.DragonBonesData)o;
			bool ret = obj.autoSearch;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index autoSearch on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_frameRate(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DragonBones.DragonBonesData obj = (DragonBones.DragonBonesData)o;
			uint ret = obj.frameRate;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index frameRate on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_name(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DragonBones.DragonBonesData obj = (DragonBones.DragonBonesData)o;
			string ret = obj.name;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index name on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_armatures(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DragonBones.DragonBonesData obj = (DragonBones.DragonBonesData)o;
			System.Collections.Generic.Dictionary<string,DragonBones.ArmatureData> ret = obj.armatures;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index armatures on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_cachedFrames(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DragonBones.DragonBonesData obj = (DragonBones.DragonBonesData)o;
			System.Collections.Generic.List<float> ret = obj.cachedFrames;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index cachedFrames on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_userData(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DragonBones.DragonBonesData obj = (DragonBones.DragonBonesData)o;
			DragonBones.CustomData ret = obj.userData;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index userData on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_armatureNames(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DragonBones.DragonBonesData obj = (DragonBones.DragonBonesData)o;
			System.Collections.Generic.List<string> ret = obj.armatureNames;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index armatureNames on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_autoSearch(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DragonBones.DragonBonesData obj = (DragonBones.DragonBonesData)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.autoSearch = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index autoSearch on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_frameRate(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DragonBones.DragonBonesData obj = (DragonBones.DragonBonesData)o;
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			obj.frameRate = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index frameRate on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_name(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DragonBones.DragonBonesData obj = (DragonBones.DragonBonesData)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.name = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index name on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_userData(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DragonBones.DragonBonesData obj = (DragonBones.DragonBonesData)o;
			DragonBones.CustomData arg0 = (DragonBones.CustomData)ToLua.CheckObject(L, 2, typeof(DragonBones.CustomData));
			obj.userData = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index userData on a nil value" : e.Message);
		}
	}
}

